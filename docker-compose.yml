services:

  django:
    container_name: tr-backend
    restart: always
    build:
      context: ./
      dockerfile: django.dockerfile
    #entrypoint: ./django-entrypoint.sh
    depends_on:
        - database
    environment:
      DEBUG: ${DEBUG:-false}
      API_42_ENDPOINT: https://api.intra.42.fr
      API_42_UID: ${API_42_UID}
      API_42_SECRET: ${API_42_SECRET}
      DOMAIN_URL: ${DOMAIN_URL?err}
      # ALLOWED_HOSTS: localhost,dump-ubuntu-barcelona
      # SECRET_KEY: tr-secret-key
      DB_ENGINE: django.db.backends.postgresql
      DB_NAME: ${DB_NAME?err}
      DB_USER: ${DB_USER?err}
      DB_PASSWORD: ${DB_PASSWORD?err}
      DB_HOST: ${DB_HOST?err}
      DB_PORT: ${DB_PORT?err}
    ports:
      - 80
      - 443
    image: python:3.12-alpine
    networks:
      - tr-network
    volumes:
      - ./:/usr/app/

  nginx:
    container_name: tr-server
    image: nginx:1.26-alpine3.20
    depends_on:
      django:
        condition: service_started
    restart: always
    networks:
      - tr-network
    ports:
      - ${HTTP_PORT:-80}:80
      - ${HTTPS_PORT:-443}:443
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./:/usr/app/
    working_dir: /usr/app/

  database:
      image: postgres:15
      container_name: tr-database
      restart: always
      environment:
          POSTGRES_DB: ${DB_NAME}
          POSTGRES_USER: ${DB_USER}
          POSTGRES_PASSWORD: ${DB_PASSWORD}
      volumes:
          - ./postgres_data:/var/lib/postgresql/data/
      networks:
          - tr-network
      ports:
          - ${DB_PORT?err}:${DB_PORT?err}

networks:
  tr-network:
    name: tr-network